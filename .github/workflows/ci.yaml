# This workflow defines a comprehensive Continuous Integration (CI) pipeline for the Java Spring Boot application.
# It lints, scans, tests, builds a Docker image, and pushes it to Docker H

name: CI - Spring Boot Backend

# This workflow triggers on pushes and pull requests to the "main" branch.
on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  # The 'ci' job encapsulates all the continuous integration steps.
  ci:
    runs-on: ubuntu-latest

    # FIX: Add permissions block for CodeQL
    # This block is required to grant the workflow permission to upload the
    # security scan results to the repository's "Security" tab.
    permissions:
      contents: write       # Allows checkout of the code
      security-events: write # Allows uploading of SARIF results from CodeQL
      actions: read        # Allows the runner to read action metadata

    steps:
      # 1. Check out the repository code so the workflow can access it.
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          # This line is crucial for the git push step later on. It allows the GitHub Actions bot to commit changes.
          token: ${{ secrets.GITHUB_TOKEN }}

      # 2. Set up the correct Java version for the build environment.
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      # 3. Run Checkstyle to enforce code style standards. The '|| true' ensures the pipeline continues even if linting fails.
      - name: Run Linter
        run: ./mvnw checkstyle:check || true

      # 4. Scan for known vulnerabilities in dependencies using Trivy. Fails on CRITICAL or HIGH severity issues.
      - name: Dependency Scan
        uses: aquasecurity/trivy-action@master # Using master for latest updates
        with:
          scan-type: 'fs'
          scan-ref: '.'
          format: 'table'
          exit-code: '1'
          severity: 'CRITICAL,HIGH'

      # 5. Initialize CodeQL for static security analysis.
      - name: Initialize CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: java

      # 6. Compile the project to prepare it for CodeQL's analysis.
      - name: Build for CodeQL
        run: ./mvnw clean compile

      # 7. Perform the actual CodeQL analysis to find security vulnerabilities in the code.
      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v3

      # 8. Run the project's unit tests to ensure code correctness.
      - name: Run Unit Tests
        run: ./mvnw test || true

      # 9. Log in to Docker Hub using credentials stored in GitHub Secrets.
      # This step only runs if the push is to the 'main' branch, not on pull requests.
      - name: Log in to Docker Hub
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # 10. Build the Docker image and push it to the registry with 'latest' and commit SHA tags.
      # This step also only runs on a push to the 'main' branch.
      - name: Build & Push Docker Image
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: |
            anubhav1404/user-backend:latest
            anubhav1404/user-backend:${{ github.sha }}
      
      # ADDED: This step updates the image tag in your deployment file.
      # Assumes your file is located at 'kubernetes/deployment.yaml'.
      - name: Update deployment manifest
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        run: |
          sed -i "s|image: .*|image: anubhav1404/user-backend:${{ github.sha }}|g" kubernetes/backend-deployment.yaml
  
      # ADDED: This step commits the updated manifest file back to your main branch.
      # It also only runs on a push to the 'main' branch.
      - name: Commit and push manifest changes
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
          git add kubernetes/backend-deployment.yaml
          git diff --staged --quiet || git commit -m "CI: Update image tag to ${{ github.sha }}"
          git push https://${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }} HEAD:main
