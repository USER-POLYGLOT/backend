name: Spring Boot CI Pipeline

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  ci:
    runs-on: ubuntu-latest

    steps:
      # 1. Checkout the code
      - name: Checkout Code
        uses: actions/checkout@v4

      # 2. Linting (Checkstyle for Java)
      - name: Run Linter
        run: mvn checkstyle:check || true

      # 3. Software Composition Analysis (Trivy for dependencies)
      - name: Dependency Scan
        uses: aquasecurity/trivy-action@0.20.0
        with:
          scan-type: fs
          ignore-unfixed: true
          format: table
          exit-code: 1
          severity: CRITICAL,HIGH

      # 4. Static Application Security Testing (SAST using CodeQL)
      - name: Initialize CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: java
      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v3

      # 5. Build Spring Boot JAR
      - name: Build Application
        run: ./mvnw clean package -DskipTests

      # 6. Run Unit Tests
      - name: Run Unit Tests
        run: ./mvnw test

      # 7. Docker Login (Docker Hub)
      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # 8. Build & Push Docker Image (uses your multi-stage Dockerfile)
      - name: Build & Push Docker Image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: |
            anubhav1404/user-backend:latest
            anubhav1404/user-backend:${{ github.sha }}
